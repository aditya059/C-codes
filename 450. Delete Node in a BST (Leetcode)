class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root == nullptr) return nullptr;
        if(key < root -> val) root -> left = deleteNode(root -> left, key);
        else if(key > root -> val) root -> right = deleteNode(root -> right, key);
        else {
            if(root -> left == nullptr && root -> right == nullptr) {
                delete(root);
                root = nullptr;
            }
            else if(root -> left == nullptr) {
                TreeNode *temp = root;
                root = root -> right;
                delete(temp);
            }
            else if(root -> right == nullptr) {
                TreeNode *temp = root;
                root = root -> left;
                delete(temp);
            }
            else {
                TreeNode *temp = root -> right;
                while(temp -> left != nullptr) {
                    temp = temp -> left;
                }
                root -> val = temp -> val;
                root -> right = deleteNode(root -> right, temp -> val);
            }
        }
        return root;
    }
};
