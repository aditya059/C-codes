class Solution{
    public:
    void dfs(int i, int j, string path, vector<string> &ans, int n, vector<vector<int>> &m) {
        if(i < 0 || i >= n || j < 0 || j >= n || m[i][j] == 0)
            return;
        if(i == n - 1 && j == n - 1) {
            ans.push_back(path);
            return;
        }
        m[i][j] = 0;
        dfs(i + 1, j, path + "D", ans, n, m);
        dfs(i, j - 1, path + "L", ans, n, m);
        dfs(i, j + 1, path + "R", ans, n, m);
        dfs(i - 1, j, path + "U", ans, n, m);
        m[i][j] = 1;
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        if(m[0][0] == 1)
            dfs(0, 0, "", ans, n, m);
        return ans;
    }
};
