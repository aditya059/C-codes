// TC = O(n * k * k)
// n eggs, k floors
int compute(int n, int k, vector<vector<int>> &DP) {
    if(n == 1 || k == 1 || k == 0) return k;
    if(DP[n][k] != -1) return DP[n][k];
    int mn = INT_MAX;
    for(int i = 1; i <= k; i++) {
        int Break = compute(n - 1, i - 1, DP);
        int NotBreak = compute(n, k - i, DP);
        mn = min(mn, 1 + max(Break, NotBreak));
    }
    DP[n][k] = mn;
    return DP[n][k];
}
//Function to find minimum number of attempts needed in 
//order to find the critical floor.
int eggDrop(int n, int k) 
{
    // your code here
    vector<vector<int>> DP(n + 1, vector<int>(k + 1, -1));
    return compute(n, k, DP);
}
